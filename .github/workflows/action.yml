name: action
on:
  workflow_dispatch:
    inputs:
      override_lastmodified:
        description: last modified date, overriding stored value
  schedule:
    - cron: '24 */4 * * *'
jobs:
  pkg_compare:
    runs-on: ubuntu-latest
    steps:
    - id: db_last_modified
      uses: jeremyd2019/store-git@v1
      with:
        action: retrieve
        name: store_db_lastmodified
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - id: pkg_compare
      run: |
          if [ -n "${{ github.event.inputs.override_lastmodified }}" ]; then
            MSYS2_DB_LAST_MODIFIED="${{ github.event.inputs.override_lastmodified }}"
          elif [ -n "${{ steps.db_last_modified.outputs.value }}" ]; then
            MSYS2_DB_LAST_MODIFIED="${{ steps.db_last_modified.outputs.value }}"
          else
            MSYS2_DB_LAST_MODIFIED=0
          fi
          touch -d "@$(($MSYS2_DB_LAST_MODIFIED))" msys.db.tar.gz
          wget -qN https://repo.msys2.org/msys/x86_64/msys.db.tar.gz
          if [ "$(($MSYS2_DB_LAST_MODIFIED))" -lt "$(stat -c '%Y' msys.db.tar.gz)" ]; then
            touch -d "@$(($MSYS2_DB_LAST_MODIFIED))" ref
            rm -rf t
            mkdir t && tar -C t -zxf msys.db.tar.gz
            find t -mindepth 1 -maxdepth 1 -newer ref -printf "%T@\t%Tc\t%P\n" | sort -n | cut -f 2- | tee >(wc -l > num)
          fi
          echo "::set-output name=msys2_db_last_modified::$(stat -c '%Y' msys.db.tar.gz)"
          if [ -f num ] && [ $(($(<num))) -gt 0 ]; then
            echo "::error ::$(<num) new or updated packages"
            exit 1
          fi
    - uses: jeremyd2019/store-git@v1
      if: ${{ (success() || failure()) && steps.db_last_modified.outputs.value != steps.pkg_compare.outputs.msys2_db_last_modified }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        action: store
        name: store_db_lastmodified
        value: ${{ steps.pkg_compare.outputs.msys2_db_last_modified }}
